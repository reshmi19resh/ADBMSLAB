->use student
->db.createUser({ user: "reportsUser", pwd: passwordPrompt(), roles: [ ] }
->db.createUser({ user: "appAdmin",pwd: passwordPrompt(), roles:[ { role: "readWrite", db:"config" }]})
->db.createUser({user: "restricted", pwd: passwordPrompt(), roles: [ { role: "readWrite", db:"reporting" } ],authenticationRestrictions: [ {clientSource: ["192.0.2.0"], serverAddress:["198.51.100.0"]} ]})
->db.dropUser("reportsUser", {w: "majority", wtimeout: 5000})
->db.getUser("appAdmin")
->db.grantRolesToUser("appAdmin",[ "readWrite" , { role: "read", db: "student" } ],{ w:"majority" , wtimeout: 4000 })
->db.revokeRolesFromUser( "appAdmin",[ { role: "read", db: "student" }, "readWrite" ],{ w:
"majority" })